<tool id="AnovaLike" name="AnovaLike" version="2">
<description>rCASC AnovaLike </description>
<requirements>
	<container type="docker">repbioinfo/anovalikev2:1</container>
</requirements>
<command detect_errors="exit_code"><![CDATA[
	## TODO: Fill in command using Cheetah templates
	## Hint: Use [ctrl+alt+c] after defining the inputs/outputs to auto-generate some Cheetah boilerplate code for you.
	ln -s $matrix /scratch/matrix.${format} ; 
	ln -s $clustering_output  /scratch/clustering_output.${format}; 

	Rscript /bin/desc.R matrix $format $separator clustering_output $ref_cluster $logCPM_threshold $FDR_threshold  $LogFC_threshold TRUE && mv /scratch/* . && 
	mv filtered_DE_matrix.${format} filtered_DE_matrix  && mv logFC_filtered_DE_matrix.${format} logFC_filtered_DE_matrix  


]]></command>
<inputs>
	<param name="matrix" type="data" format="csv,txt" label="count matrix" help="count matrix file" />
	<param name="format" type="select" label="select format" help="TODO">
				<option value="csv" selected="True">csv</option>
				<option value="txt" >txt</option>
	</param>
	<param name="separator" type="select" label="matrix separator" help="separator used in count file">
		<option value="," selected="True">comma-separated</option>
		<option value="tab" >tab separated</option>
	</param>
	<param name="clustering_output" type="data" format="csv,txt" label="cluster file" help="_clustering.output.txt file of interest, generated by permutationClustering" />
	<param name="ref_cluster" type="integer" value="3" label="reference cluster" help=" a number indicating the cluster to be used a reference for anova-like comparison with the other clusters." />
	<param name="logCPM_threshold" type="float" min="0" max="10" value="4" label="" help="minimal average abundance" />
	<param name="FDR_threshold" type="float" min="0" max="10" value="0.05" label="" help="minimal FDR present in at least one of the comparisons with respect to reference covariate" />
	<param name="LogFC_threshold" type="float" min="0" max="10" value="1" label="" help="minimal logFC present in at least one of the comparisons with respect to reference covariate" />
</inputs>
<outputs>
	<data name="DE_matrix" from_work_dir="DE_matrix" format="txt" label="${tool.name} on ${on_string}: DE Matrix file" />
	<data name="filtered_de" from_work_dir="filteredDE.pdf" format= "pdf" label="${tool.name} on ${on_string}: filtered DE PLOT pdf" />
	<data name="filtered_de_matrix"	from_work_dir="filtered_DE_matrix" format="txt" label="${tool.name} on ${on_string}:filtered de Matrix " />
	<data name="logFC" from_work_dir="logFC_filtered_DE_matrix"  format="txt" label="${tool.name} on ${on_string}: logFC filtered DE" />
</outputs>
<tests>
</tests>
<help><![CDATA[

.. class:: infomark

**What it does**
Usage
.....


**Input**
	AnovaLike perform a differential expression analysis on the input matrix used to evaluate clusters. This function require the input matrix used to evaluate clusters and the file clustering.output generated from the chosen algorithm cluster.  Differential expression analysis is performed between one chosen cluster against all the others. Parameters are the follow : 
- matrix  counts table file. 
- cluster.file, a character string indicating the _clustering.output.txt file of interest, generated by bootstrapSimlar or bootStrapTsne.
- ref.cluster, a number indicating the cluster to be used a reference for anova-like comparison with the other clusters.
- sep, separator used in count file, e.g. '\\t', ','
- logFC.threshold, minimal logFC present in at least one of the comparisons with respect to reference covariate
- FDR.threshold, minimal FDR present in at least one of the comparisons with respect to reference covariate
- logCPM.threshold, minimal average abundance


**Output**
	
- DE_matrix Differential expression matrix
- filteredDE.pdf Differential expression plot
- filtered_DE_matrix filtered differential expression matrix	
- logFC_filtered_DE_matrix filtered matrix by logFC 


]]></help>
<citations>
	<citation type="doi"> </citation>
</citations>
</tool>

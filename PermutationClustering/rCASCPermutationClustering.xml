<tool id="PermutationClustering" name="PermutationClustering">
	<description>PermutationClustering (Griph|SIMLR|tsne)</description>
	<requirements>
		<container type="docker">repbioinfo/permutationclusteringv2:1</container>
	</requirements>
	<command>
		<![CDATA[
			##Rscript example
			##Rscript main.R annotated_lorenz_testSCumi_mm10 4 2 10 3 4 csv , 0 griph 0 10 1111 
			ln -s  $matrix /scratch/annotated_matrix.${Format} &&

                        #if $clustering_type.Clustering!='griph'

			Rscript /home/main.R annotated_matrix $NPerm $PermAtTime $Percent $clustering_type.Range1 $clustering_type.Range2 $Format $Separator $LogTen $clustering_type.Clustering 0 $Perplexity $Seed &&
			#else
			Rscript /home/main.R annotated_matrix $NPerm $PermAtTime $Percent null null $Format $Separator $LogTen $clustering_type.Clustering 0 $Perplexity $Seed &&
			#end if
			mkdir -p ${html_file.files_path} &&	
			tar -zcvf zipOutput.tar.gz -C /scratch/ .  &&
			cp -R /scratch/* ${html_file.extra_files_path} &&
			tree $html_file.extra_files_path -H .  -T "permutationClustering" -o $html_file &&

			mkdir outputs;
			for i in `find "/scratch/annotated_matrix" -name annotated_matrix_clustering.output.${Format}`;
			do export output_file=\$i; final_path=`echo \$output_file |sed 's/scratch\/annotated_matrix//;s/^.\///;s/\//_/'`;
			mv \$output_file outputs/\$final_path; 
			done;


			]]> </command>
		<inputs>
			<param format="csv,txt" name="matrix" label="input count matrix" type="data" />
			<param name="NPerm" value="4" help='number of permutations to perform the pValue to evaluate clustering' type="integer"/>
			<param name="PermAtTime" value="2" type="integer" help="number of permutations to compute in parallel" />
			<param name="Percent" value="10" type="integer" help="percentage of randomly selected cells removed in each permutation" />
			<param name="Format" type="select" help="matrix format" >
				<option value="csv" selected="True">csv</option>
				<option value="txt" >txt</option>
			</param>
			<param name="Separator" value="," type="select" help="separator used in count file, e.g. '\\t', ','" >
				<option value="," selected="True">comma-separated</option>
				<option value="tab" >tab separated</option>
			</param>
	                <param name="LogTen" type="select" help="this value must be set to false only if the values in the count matrix had been log10 transformed" label="raw count" >
		               <option value="0" selected="true">TRUE</option>
		               <option value="1" >FALSE</option> 
	                </param>
		        <conditional name="clustering_type">
			<param name="Clustering"  type="select" help="clustering method to use : SIMLR , tSne or griph" > 
				<option value="griph" selected="True">griph</option>
				<option value="SIMLR">SIMLR</option>
				<option value="tSne">kmeans+tsne</option>
			</param>
		        <when value="SIMLR">
			<param name="Range1" value="3" type="integer" help="first number of cluster for k means algorithm" />
			<param name="Range2" value="4" type="integer" help="last number of cluster for k means algorithm" />
		        </when>
		        <when value="tSne">
			<param name="Range1" value="3" type="integer" help="first number of cluster for k means algorithm" />
			<param name="Range2" value="4" type="integer" help="last number of cluster for k means algorithm" />
		        </when>
		        </conditional>

			<param name="Perplexity" value="10" type="integer" help="Number of close neighbors for each point. This parameter is specific for tSne. Default value is 10.Setting this parameter when use a clustering method different by tSne will be ignored." />
			<param name="Seed" value="1111" type="integer" help="important value to reproduce the same results with same input" />
		</inputs>
		<outputs>
			<data name="html_file" format="html" label="${tool.name} clustering method: ${clustering_type.Clustering} on ${on_string}:html-file"/>
			<data name="zipOutput" format="tar" from_work_dir="zipOutput.tar.gz" label="${tool.name} clustering method: ${clustering_type.Clustering} on ${on_string}  ">
				<discover_datasets  format="input" pattern="__designation_and_ext__" directory="outputs" visible="true" />
			</data>
		</outputs>
		<stdio>
			<regex match="Error"
				source="stderr"
				level="fatal"
				description="Unknown error encountered" />
		</stdio>
			<help>
				permutationClustering perform clustering with the selected cluster method (SIMLR, tSne or griph) bootstrapping the dataset.
				This function return different files related to the bootstrap and the clustering.output file, important for most of the rCASC analysis.

			</help>
		</tool>

